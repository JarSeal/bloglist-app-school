# Deployment Pipeline
name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  simple_deployment_pipeline:
    runs-on: ubuntu-18.04
    steps:      
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      
      # BACKEND INSTALL AND TESTS:
      - name: npm install backend
        working-directory: ./backend
        run: npm install
      - name: lint backend
        working-directory: ./backend
        run: npm run lint
      - name: run backend test (jest)
        run: TEST_MONGODB_URI=$TEST_MONGODB_URI PORT=$PORT SECRET=$SECRET npm test
        working-directory: ./backend
        env:
          TEST_MONGODB_URI: ${{secrets.TEST_MONGODB_URI}}
          PORT: ${{secrets.PORT}}
          SECRET: ${{secrets.SOME_SECRET}}
      
      # FRONTEND INSTALL AND TESTS:
      - name: npm install frontend
        working-directory: ./frontend
        run: npm install
      - name: build frontend
        working-directory: ./frontend
        run: npm run build
      - name: lint frontend
        working-directory: ./frontend
        run: npm run eslint
      - name: run frontend test (jest/react)
        working-directory: ./frontend
        run: npm test
      
      # END TO END TESTS:
      - name: start e2e tests backend server
        working-directory: ./backend
        run: TEST_MONGODB_URI=$TEST_MONGODB_URI PORT=$PORT SECRET=$SECRET npm run start:test &
        env:
          TEST_MONGODB_URI: ${{secrets.TEST_MONGODB_URI}}
          PORT: ${{secrets.PORT}}
          SECRET: ${{secrets.SOME_SECRET}}
      - name: open front development server for e2e tests
        working-directory: ./frontend
        run: npm start &
      - name: run cypress (e2e tests)
        working-directory: ./frontend
        run: npm run test:e2e
      
      # HEROKU DEPLOYMENT:
      - uses: akhileshns/heroku-deploy@v3.7.8
        if: "github.event_name == 'push' && !contains(github.event.head_commit.message, '#skip')"
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
          heroku_email: ${{secrets.HEROKU_EMAIL}}
          appdir: "backend"
          healthcheck: "https://${{secrets.HEROKU_APP_NAME}}.herokuapp.com/api/health"
          checkstring: "ok"
          rollbackonhealthcheckfailed: true