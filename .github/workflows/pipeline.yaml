# Deployment Pipeline
name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  simple_deployment_pipeline:
    runs-on: ubuntu-18.04
    steps:      
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      
      # BACKEND INSTALL AND TESTS:
      - name: npm install backend
        working-directory: ./backend
        run: npm install
      - name: lint backend
        working-directory: ./backend
        run: npm run lint
      - name: run backend test (jest)
        run: TEST_MONGODB_URI=$TEST_MONGODB_URI PORT=$PORT SECRET=$SECRET npm test
        working-directory: ./backend
        env:
          TEST_MONGODB_URI: ${{secrets.TEST_MONGODB_URI}}
          PORT: ${{secrets.PORT}}
          SECRET: ${{secrets.SOME_SECRET}}
      
      # FRONTEND INSTALL AND TESTS:
      - name: npm install frontend
        working-directory: ./frontend
        run: npm install
      - name: build frontend
        working-directory: ./frontend
        run: npm run build
      - name: lint frontend
        working-directory: ./frontend
        run: npm run eslint
      - name: run frontend test (jest/react)
        working-directory: ./frontend
        run: npm test
      # - name: copy frontend to backend folder
      #   working-directory: ./frontend
      #   run: cp -r build ../backend/front
      
      # END TO END TESTS:
      - name: start e2e tests backend server
        working-directory: ./backend
        run: TEST_MONGODB_URI=$TEST_MONGODB_URI PORT=$PORT SECRET=$SECRET npm run start:test &
        env:
          TEST_MONGODB_URI: ${{secrets.TEST_MONGODB_URI}}
          PORT: ${{secrets.PORT}}
          SECRET: ${{secrets.SOME_SECRET}}
      - name: open front development server for e2e tests
        working-directory: ./frontend
        run: npm start &
      - name: run cypress (e2e tests)
        working-directory: ./frontend
        run: npm run test:e2e
      
      # HEROKU DEPLOYMENT:
      - uses: akhileshns/heroku-deploy@v3.7.8
        if: "github.event_name == 'push' && !contains(github.event.head_commit.message, '#skip')"
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
          heroku_email: ${{secrets.HEROKU_EMAIL}}
          healthcheck: "https://${{secrets.HEROKU_APP_NAME}}.herokuapp.com/health"
          checkstring: "ok"
          appdir: "backend"
          rollbackonhealthcheckfailed: true
      
      # - name: e2e tests
      #   uses: cypress-io/github-action@v2
      #   with:
      #     working-directory: ./frontend
      #     command: npm run test:e2e
      #     start: cd ../backend && TEST_MONGODB_URI=$TEST_MONGODB_URI PORT=$PORT SECRET=$SECRET npm run start:test
      #     wait-on: http://localhost:3000
      #   env:
      #     TEST_MONGODB_URI: ${{secrets.TEST_MONGODB_URI}}
      #     PORT: ${{secrets.PORT}}
      #     SECRET: ${{secrets.SOME_SECRET}}
      # - uses: akhileshns/heroku-deploy@v3.7.8
      #   if: "github.event_name == 'push' && !contains(github.event.head_commit.message, '#skip')"
      #   with:
      #     heroku_api_key: ${{secrets.HEROKU_API_KEY}}
      #     heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
      #     heroku_email: ${{secrets.HEROKU_EMAIL}}
      #     healthcheck: "https://${{secrets.HEROKU_APP_NAME}}.herokuapp.com/health"
      #     checkstring: "ok"
      #     rollbackonhealthcheckfailed: true
      # - uses: 8398a7/action-slack@v3
      #   with:
      #     status: custom
      #     custom_payload: |
      #       {
      #         attachments: [{
      #             color: 'danger',
      #             text: `Deployment to https://${{secrets.HEROKU_APP_NAME}}.herokuapp.com failed.\n${process.env.AS_WORKFLOW}\n${process.env.AS_JOB} (${process.env.AS_COMMIT}) of ${process.env.AS_REPO}, ${{ job.status }} in ${process.env.AS_TOOK}. Commit message: "${process.env.AS_MESSAGE}"`
      #           }]
      #       }
      #     fields: repo,message,commit,workflow,job,took
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      #   if: "github.event_name == 'push' && !contains(github.event.head_commit.message, '#skip') && failure()"
      # - uses: actions/checkout@v2
      #   if: "github.event_name == 'push' && !contains(github.event.head_commit.message, '#skip')"
      # - name: Bump version and push tag
      #   id: new_id
      #   uses: anothrNick/github-tag-action@1.33.0
      #   if: "github.event_name == 'push' && !contains(github.event.head_commit.message, '#skip')"
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # - uses: 8398a7/action-slack@v3
      #   with:
      #     status: custom
      #     custom_payload: |
      #       {
      #         attachments: [{
      #             color: 'good',
      #             text: `Deployment to https://${{secrets.HEROKU_APP_NAME}}.herokuapp.com done and version upgraded to ${process.env.NEW_VERSION_NUMBER}.\n${process.env.AS_WORKFLOW}\n${process.env.AS_JOB} (${process.env.AS_COMMIT}) of ${process.env.AS_REPO}, ${{ job.status }} in ${process.env.AS_TOOK}. Commit message: "${process.env.AS_MESSAGE}"`
      #           }]
      #       }
      #     fields: repo,message,commit,workflow,job,took
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      #     NEW_VERSION_NUMBER: ${{ steps.new_id.outputs.new_tag }}
      #   if: "github.event_name == 'push' && !contains(github.event.head_commit.message, '#skip')"