{"version":3,"sources":["components/Togglable.js","components/NotificationBox.js","components/Blog.js","services/login.js","components/Login.js","components/CreateBlog.js","services/blogs.js","utils/localStorage.js","App.js","index.js"],"names":["Togglable","React","forwardRef","props","ref","useState","visible","setVisible","phaser","setPhaser","toggleVisibility","useImperativeHandle","p","v","className","style","position","maxWidth","display","keepButtonVisible","onClick","label","setTimeout","transitionDuration","top","right","title","children","displayName","timer","Blog","blog","handleLikeClick","handleDeleteClick","user","loadingLike","setLoadingLike","author","name","likes","paddingBottom","href","url","deleteButton","login","credentials","a","axios","post","response","data","handleLogin","e","username","password","setUser","setUsername","setPassword","setLoginNote","ls","preventDefault","loginService","setItem","JSON","stringify","msg","type","length","phase","Login","onSubmit","htmlFor","id","value","onChange","target","loginForm","marginBottom","borderBottom","removeItem","handleLogout","loginInfo","setClassName","note","setNote","transitionT","baseClass","clearTimeout","setPhaseClass","NotificationBox","template","push","key","action","handleConfirmation","concat","CreateBlog","handleCreateNew","blogRef","setTitle","setAuthor","setUrl","current","token","getAll","get","then","setToken","newToken","newBlog","newObject","config","headers","Authorization","likeBlog","put","baseUrl","deleteBlog","delete","localStorageAvailable","checkIfItemExists","Object","prototype","hasOwnProperty","call","window","localStorage","lsTest","test","initLocalStorage","getItem","defaultValue","App","useRef","blogs","setBlogs","useEffect","loggedUserJSON","u","parse","blogService","userId","newLikes","body","assign","updatedList","filter","b","result","newBlogs","status","undefined","errors","fontFamily","color","margin","sort","map","opacity","fontSize","textAlign","marginTop","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0aa5e69e.chunk.js","sourcesContent":["import React, { useState, useImperativeHandle } from 'react';\nimport PropTypes from 'prop-types';\nimport './Togglable.css';\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false);\n  const [phaser, setPhaser] = useState(0);\n\n  const toggleVisibility = () => {\n    setPhaser(1);\n  };\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    };\n  });\n\n  const setAreaClass = (p, v) => {\n    if(phaser > 0) {\n      setTimeout(() => {\n        if(phaser < 2)  {\n          setPhaser(phaser + 1);\n        } else {\n          setPhaser(0);\n          setVisible(!visible);\n        }\n      }, phaser === 2 ? 500 : 100);\n    }\n    return 'toggle-area phase-' + p + ' visi-' + v;\n  };\n\n  return (\n    <div className='togglable' style={{ position: 'relative', maxWidth: '960px' }}>\n      <div style={{ display: (visible || (!visible && phaser !== 0)) && !props.keepButtonVisible ? 'none' : '' }}>\n        <button onClick={toggleVisibility} className='toggle-button'>{props.label}</button>\n      </div>\n      <div className={setAreaClass(phaser, visible)} style={{ transitionDuration: '600ms' }}>\n        <div style={{\n          position: 'absolute',\n          top: '5px',\n          right: '5px'\n        }}>\n          <button\n            onClick={toggleVisibility}\n            title='cancel'\n            className='close-button'></button>\n        </div>\n        {props.children}\n      </div>\n    </div>\n  );\n});\n\nTogglable.propTypes = {\n  label: PropTypes.string.isRequired\n};\n\nTogglable.displayName = 'Togglable';\n\nexport default Togglable;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './NotificationBox.css';\n\nlet timer;\n\nconst setPhaseClass = (length, phase, note, setNote, transitionT) => {\n  switch(phase) {\n  case 1:\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      setNote({ ...note, phase: 2 });\n    }, transitionT);\n    return ' notification--start';\n  case 2:\n    clearTimeout(timer);\n    if(length !== 0) {\n      timer = setTimeout(() => {\n        setNote({ ...note, phase: 3 });\n      }, length - 10);\n    }\n    return ' notification--middle';\n  case 3:\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      setNote({ ...note, phase: 4 });\n    }, 10);\n    return ' notification--end-begin';\n  case 4:\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      setNote({ msg: '', type: 0, length: 0, phase: 0 });\n    }, transitionT);\n    return ' notification--end-begin notification--end';\n  default: return '';\n  }\n};\n\nconst setClassName = (note, setNote, transitionT) => {\n  const { type, length, phase } = note;\n  let baseClass = 'notification' + setPhaseClass(length, phase, note, setNote, transitionT);\n  switch(type) {\n  case 1: return baseClass + ' notification--done';\n  case 2: return baseClass + ' notification--warning';\n  case 3: return baseClass + ' notification--error';\n  case 4: return baseClass + ' notification--warning notification--confirmation';\n  default: return baseClass + ' notification--hidden';\n  }\n};\n\nconst handleConfirmation = (note, setNote, transitionT) => {\n  setNote({ ...note, phase: 3 });\n  setTimeout(note.action, transitionT);\n};\n\nconst NotificationBox = ({ note, setNote }) => {\n  const transitionT = 300; // Start and end transition time in ms\n  const template = [];\n  if(note && note.msg.length) {\n    template.push(note.msg);\n    if(note.type === 4) {\n      template.push(<div key='confirm-area' className='notification__confirm-area'>\n        <button\n          onClick={() => handleConfirmation(note, setNote, transitionT)}\n          title='Confirm'\n          className='notification__button notification__button--confirm'\n          key='confirm-button'>Confirm</button>&nbsp;\n        <button\n          onClick={() => setNote({ ...note, phase: 3 })}\n          title='Cancel'\n          className='notification__button notification__button--cancel'\n          key='cancel-button'>Cancel</button>\n      </div>);\n    }\n    template.push(\n      <button\n        onClick={() => setNote({ ...note, phase: 3 })}\n        title='Close this notification'\n        className='close-button'\n        key='close-button'></button>\n    );\n  } else {\n    template.concat(null);\n  }\n  return <div className='notification-box-wrapper'>\n    <div className={setClassName(note, setNote, transitionT)} style={{ transitionDuration: transitionT + 'ms' }}>\n      {template}\n    </div>\n  </div>;\n};\n\nNotificationBox.propTypes = {\n  note: PropTypes.shape({\n    msg: PropTypes.string.isRequired,\n    type: PropTypes.number.isRequired,\n    length: PropTypes.number.isRequired,\n    phase: PropTypes.number.isRequired\n  }),\n  setNote: PropTypes.func.isRequired\n};\n\nexport default NotificationBox;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Togglable from './Togglable';\nimport './Blog.css';\n\nconst deleteButton = (user, blog, handleDeleteClick) => {\n  if(!user) return null;\n  return (\n    <div className='info-row align-right'>\n      <button className='delete-button' onClick={\n        () => handleDeleteClick(blog)\n      }>delete</button>\n    </div>\n  );\n};\n\nconst Blog = ({ blog, handleLikeClick, handleDeleteClick, user }) => {\n  const [loadingLike, setLoadingLike] = useState(false);\n\n  return (\n    <div className='blog-item'>\n      <h3 className='title'>\n        {blog.title}\n        <span className='author'>{blog.author ? 'by ' + blog.author : blog.user ? 'by ' + blog.user.name : ''}</span>\n        <span className='likes-big'>{blog.likes}<span>likes</span></span>\n      </h3>\n      <Togglable label='info' keepButtonVisible='true'>\n        <div style={{ paddingBottom: '12px' }}>\n          <div className='info-row info-row--url'>\n            <span className='info-row__label'>URL: </span><a href={blog.url}>{blog.url}</a>\n          </div>\n          <div className='info-row info-row--likes'>\n            <span className='info-row__label'>Likes: </span>\n            {blog.likes}\n            <button\n              className={loadingLike ? 'like-button loading' : 'like-button'}\n              onClick={() => handleLikeClick(blog, loadingLike, setLoadingLike)}>\n              {loadingLike ? 'saving..' : 'like'}\n            </button>\n          </div>\n          <div className='info-row'>\n            <span className='info-row__label'>Creator: </span>{blog.user && blog.user.name ? blog.user.name : '--'}\n          </div>\n          {deleteButton(user, blog, handleDeleteClick)}\n        </div>\n      </Togglable>\n    </div>\n  );\n};\n\nBlog.propTypes = {\n  blog: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired,\n    author: PropTypes.string,\n    user: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      username: PropTypes.string.isRequired,\n      name: PropTypes.string\n    })\n  }),\n  handleLikeClick: PropTypes.func.isRequired,\n  handleDeleteClick: PropTypes.func.isRequired,\n};\n\nexport default Blog;\n","import axios from 'axios';\nconst baseUrl = '/api/login';\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials);\n  return response.data;\n};\n\nexport default { login };","import React, { useState } from 'react';\nimport loginService from './../services/login';\n\nconst handleLogin = async (e, username, password, setUser, setUsername, setPassword, setLoginNote, ls) => {\n  e.preventDefault();\n  try {\n    const user = await loginService.login({\n      username, password,\n    });\n    setUser(user);\n    ls.setItem('blogAppUser', JSON.stringify(user));\n    setUsername('');\n    setPassword('');\n    setLoginNote({\n      msg: `Welcome ${user.name}!`,\n      type: 1,\n      length: 5000,\n      phase: 1,\n    });\n  } catch (exception) {\n    setLoginNote({\n      msg: 'Wrong username or password!',\n      type: 2,\n      length: 5000,\n      phase: 1,\n    });\n  }\n};\n\nconst loginForm = (username, password, setUser, setUsername, setPassword, setLoginNote, ls) => {\n  return (\n    <div className=\"login-form form-wrapper\">\n      <h3>Login</h3>\n      <form onSubmit={(e) => handleLogin(e, username, password, setUser, setUsername, setPassword, setLoginNote, ls)}>\n        <div className=\"form-elem form-elem__input-text\">\n          <label htmlFor=\"login-user\">\n            <span className=\"label-text\">Username:</span>\n            <input\n              id=\"login-user\"\n              className=\"input-text\"\n              type=\"text\"\n              value={username}\n              name=\"Username\"\n              onChange={({ target }) => setUsername(target.value)}\n            />\n          </label>\n        </div>\n        <div className=\"form-elem form-elem__input-text\">\n          <label htmlFor=\"login-pass\">\n            <span className=\"label-text\">Password:</span>\n            <input\n              id=\"login-pass\"\n              className=\"input-text\"\n              type=\"password\"\n              value={password}\n              name=\"Password\"\n              onChange={({ target }) => setPassword(target.value)}\n            />\n          </label>\n        </div>\n        <div className=\"form-elem form-elem__submit\">\n          <button type=\"submit\" id=\"login-button\">login</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nconst handleLogout = (e, setUser, setLoginNote, ls) => {\n  ls.removeItem('blogAppUser');\n  setUser(null);\n  setLoginNote({\n    msg: 'You are now logged out!',\n    type: 1,\n    length: 5000,\n    phase: 1,\n  });\n};\n\nconst loginInfo = (user, setUser, setLoginNote, ls) => {\n  return (\n    <div className=\"logged-in-bar\" style={{\n      marginBottom: '12px', paddingBottom: '8px', borderBottom: '2px dashed #bbb'\n    }}>\n      {user.name} logged in\n      &nbsp;\n      <button onClick={(e) => handleLogout(e, setUser, setLoginNote, ls)}>logout</button>\n    </div>\n  );\n};\n\nconst Login = ({ user, setUser, setLoginNote, ls }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  return (\n    <div className=\"login-wrapper\">\n      { user === null\n        ? loginForm(username, password, setUser, setUsername, setPassword, setLoginNote, ls)\n        : loginInfo(user, setUser, setLoginNote, ls)\n      }\n    </div>\n  );\n};\n\nexport default Login;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst CreateBlog = ({ handleCreateNew, blogRef }) => {\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [url, setUrl] = useState('');\n\n  const addBlog = (e) => {\n    e.preventDefault();\n    handleCreateNew(title, author, url, setTitle, setAuthor, setUrl);\n  };\n\n  return (\n    <div className='create-blog-form form-wrapper'>\n      <h3>Create new blog</h3>\n      <form onSubmit={addBlog} id='new-blog-form'>\n        <div className='form-elem form-elem__input-text'>\n          <label htmlFor='create-title'>\n            <span className='label-text'>Title *</span>\n            <input\n              id='create-title'\n              className='input-text'\n              type='text'\n              value={title}\n              name='Title'\n              onChange={({ target }) => setTitle(target.value)}\n            />\n          </label>\n        </div>\n        <div className='form-elem form-elem__input-text'>\n          <label htmlFor='create-author'>\n            <span className='label-text'>Author</span>\n            <input\n              id='create-author'\n              className='input-text'\n              type='text'\n              value={author}\n              name='Author'\n              onChange={({ target }) => setAuthor(target.value)}\n            />\n          </label>\n        </div>\n        <div className='form-elem form-elem__input-text'>\n          <label htmlFor='create-url'>\n            <span className='label-text'>URL *</span>\n            <input\n              id='create-url'\n              className='input-text'\n              type='text'\n              value={url}\n              name='URL'\n              onChange={({ target }) => setUrl(target.value)}\n            />\n          </label>\n        </div>\n        <div className='form-elem form-elem__submit'>\n          <button type='submit' id='create-new-button'>Create new</button>\n          {blogRef &&\n            <button\n              type='button'\n              className='cancel-button'\n              onClick={() => blogRef.current.toggleVisibility()}>Cancel</button>\n          }\n        </div>\n      </form>\n    </div>\n  );\n};\n\nCreateBlog.propTypes = {\n  handleCreateNew: PropTypes.func.isRequired,\n  blogRef: PropTypes.object.isRequired\n};\n\nexport default CreateBlog;","import axios from 'axios';\nconst baseUrl = '/api/blogs';\n\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst newBlog = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  };\n  const response = await axios.post(baseUrl, newObject, config);\n  return response.data;\n};\n\nconst likeBlog = async newObject => {\n  const response = await axios.put(baseUrl + '/' + newObject.id, newObject);\n  return response.data;\n};\n\nconst deleteBlog = async id => {\n  const config = {\n    headers: { Authorization: token },\n  };\n  const response = await axios.delete(baseUrl + '/' + id, config);\n  return response.data;\n};\n\nexport default { getAll, setToken, newBlog, likeBlog, deleteBlog };","let localStorageAvailable = false;\n\nconst initLocalStorage = () => {\n  if(lsTest()) {\n    localStorageAvailable = true;\n  }\n};\n\nconst getItem = (key, defaultValue) => {\n  // defaultValue is returned (if provided) if local storage is not available or the key is not found\n  if(!localStorageAvailable) return defaultValue || null;\n  if(checkIfItemExists(key)) {\n    return window.localStorage.getItem(key);\n  } else {\n    return defaultValue || null;\n  }\n};\n\nconst checkIfItemExists = (key) => {\n  if(!localStorageAvailable) return false;\n  return Object.prototype.hasOwnProperty.call(window.localStorage, key);\n};\n\nconst setItem = (key, value) => {\n  if(!localStorageAvailable) return false;\n  window.localStorage.setItem(key, value);\n  return true;\n};\n\nconst removeItem = (key) => {\n  if(!localStorageAvailable) return false;\n  if(checkIfItemExists(key)) {\n    window.localStorage.removeItem(key);\n  }\n  return true;\n};\n\nconst lsTest = () => {\n  const test = 'testLSAvailability';\n  try {\n    window.localStorage.setItem(test, test);\n    window.localStorage.removeItem(test);\n    return true;\n  } catch(e) {\n    return false;\n  }\n};\n\nexport default { initLocalStorage, getItem, setItem, removeItem };","import React, { useState, useEffect, useRef } from 'react';\nimport Blog from './components/Blog';\nimport Login from './components/Login';\nimport NotificationBox from './components/NotificationBox';\nimport CreateBlog from './components/CreateBlog';\nimport Togglable from './components/Togglable';\nimport blogService from './services/blogs';\nimport ls from './utils/localStorage';\nimport './styles/form-elements.css';\nimport './styles/buttons.css';\n\nconst App = () => {\n  const blogRef = useRef();\n  const [blogs, setBlogs] = useState([]);\n  const [user, setUser] = useState(null);\n  const [note, setNote] = useState({ msg: '', type: 0, length: 0, phase :0 });\n\n  useEffect(() => {\n    ls.initLocalStorage();\n    const loggedUserJSON = ls.getItem('blogAppUser');\n    if(loggedUserJSON) {\n      const u = JSON.parse(loggedUserJSON);\n      setUser(u);\n      blogService.setToken(u.token);\n    }\n    blogService.getAll().then(blogs =>\n      setBlogs(blogs)\n    );\n  }, []);\n\n  const handleLikeClick = async (blog, loadingLike, setLoadingLike) => {\n    if(loadingLike) return;\n    setLoadingLike(true);\n    try {\n      const userId = blog.user.id;\n      const newLikes = blog.likes + 1;\n      const body = Object.assign({}, blog, { user: userId, likes: newLikes });\n      await blogService.likeBlog(body);\n      blog.likes = newLikes;\n      let updatedList = blogs.filter((b) => {\n        if(b.id !== blog.id) return b;\n        return null;\n      });\n      updatedList = updatedList.concat(blog);\n      setBlogs(updatedList);\n      setLoadingLike(false);\n    } catch (error) {\n      setNote({\n        msg: 'Error in saving like action.',\n        type: 3,\n        length: 0,\n        phase: 1,\n      });\n      setLoadingLike(false);\n    }\n  };\n\n  const handleDeleteClick = (blog) => {\n    setNote({\n      msg: `Delete blog: ${blog.title}?`,\n      type: 4,\n      length: 0,\n      phase: 1,\n      action: async () => {\n        try {\n          await blogService.deleteBlog(blog.id);\n          let updatedList = blogs.filter((b) => {\n            if(b.id !== blog.id) return b;\n            return null;\n          });\n          setBlogs(updatedList);\n        } catch (error) {\n          setNote({\n            msg: 'Error in deleting blog.',\n            type: 3,\n            length: 0,\n            phase: 1,\n          });\n        }\n      }\n    });\n  };\n\n  const handleCreateNew = async (\n    title, author, url, setTitle, setAuthor, setUrl\n  ) => {\n    try {\n      const result = await blogService.newBlog({\n        title, author, url\n      });\n      const newBlogs = blogs.concat(result);\n      setBlogs(newBlogs);\n      setTitle('');\n      setAuthor('');\n      setUrl('');\n      setNote({\n        msg: `New blog (${title}) saved!`,\n        type: 1,\n        length: 5000,\n        phase: 1,\n      });\n      if(blogRef) blogRef.current.toggleVisibility();\n    } catch (error) {\n      if(error.response && error.response.status === 400 && error.response.data.errors !== undefined) {\n        const errors = error.response.data.errors;\n        if(errors.title !== undefined) {\n          setNote({\n            msg: 'Title cannot be empty.',\n            type: 2,\n            length: 5000,\n            phase: 1,\n          });\n          return;\n        } else if(errors.url !== undefined) {\n          setNote({\n            msg: 'URL cannot be empty.',\n            type: 2,\n            length: 5000,\n            phase: 1,\n          });\n          return;\n        }\n      }\n      setNote({\n        msg: 'Error, could not create new blog!',\n        type: 3,\n        length: 0,\n        phase: 1,\n      });\n    }\n  };\n\n  return (\n    <div style={{\n      fontFamily:'sans-serif',\n      color:'#333',\n      maxWidth: '960px',\n      margin: '0 auto'\n    }}>\n      <h2>Blogs</h2>\n      <NotificationBox note={note} setNote={setNote} />\n      <Login\n        user={user}\n        setUser={setUser}\n        setLoginNote={setNote}\n        ls={ls} />\n      {user !== null &&\n        <Togglable label='+ New blog' ref={blogRef}>\n          <CreateBlog\n            handleCreateNew={handleCreateNew}\n            blogRef={blogRef} />\n        </Togglable>\n      }\n      <div className='blog-list'>\n        {blogs.sort((a, b) => {\n          return b.likes - a.likes;\n        }).map(blog =>\n          <Blog\n            key={blog.id}\n            blog={blog}\n            handleLikeClick={handleLikeClick}\n            handleDeleteClick={handleDeleteClick}\n            user={user} />\n        )}\n      </div>\n      <footer style={{\n        opacity: 0.2, fontSize: '12px', textAlign: 'center', marginTop: '-18px', marginBottom: '50px'\n      }}>by Kai Forsman</footer>\n    </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}